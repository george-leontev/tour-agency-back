CREATE TABLE business.agency
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name          VARCHAR(128)                             NOT NULL,
    stars_count   INTEGER                                  NOT NULL,
    country_count INTEGER                                  NOT NULL,
    CONSTRAINT pk_agency PRIMARY KEY (id)
);

CREATE TABLE business.client
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                             NOT NULL,
    CONSTRAINT pk_client PRIMARY KEY (id)
);

CREATE TABLE business.excursion
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name     VARCHAR(255)                             NOT NULL,
    price    INTEGER                                  NOT NULL,
    duration INTEGER                                  NOT NULL,
    CONSTRAINT pk_excursion PRIMARY KEY (id)
);

CREATE TABLE business.flight
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    flight_number INTEGER                                  NOT NULL,
    pilot_id      INTEGER,
    status_id     INTEGER,
    CONSTRAINT pk_flight PRIMARY KEY (id)
);

CREATE TABLE business.pilot
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name       VARCHAR(64)                              NOT NULL,
    surname    VARCHAR(64)                              NOT NULL,
    patronymic VARCHAR(64),
    CONSTRAINT pk_pilot PRIMARY KEY (id)
);

CREATE TABLE business.review
(
    id      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    rating  INTEGER                                  NOT NULL,
    comment VARCHAR,
    created_at TIMESTAMP WITHOUT TIME ZONE              NOT NULL,
    client_id  INTEGER,
    tour_id    INTEGER,
    CONSTRAINT pk_review PRIMARY KEY (id)
);

CREATE TABLE business.status
(
    id             INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    departure_date TIMESTAMP WITHOUT TIME ZONE              NOT NULL,
    arrival_date   TIMESTAMP WITHOUT TIME ZONE              NOT NULL,
    is_complete    BOOLEAN                                  NOT NULL,
    CONSTRAINT pk_status PRIMARY KEY (id)
);

CREATE TABLE business.ticket
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    price         INTEGER                                  NOT NULL,
    purchase_date TIMESTAMP WITHOUT TIME ZONE              NOT NULL,
    client_id     INTEGER,
    flight_id     INTEGER,
    CONSTRAINT pk_ticket PRIMARY KEY (id)
);

CREATE TABLE business.tour
(
    id        INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    country   VARCHAR(128)                             NOT NULL,
    price     INTEGER                                  NOT NULL,
    day_count INTEGER                                  NOT NULL,
    agency_id INTEGER,
    CONSTRAINT pk_tour PRIMARY KEY (id)
);

CREATE TABLE business.tour_link_excursion
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    tour_id      INTEGER,
    excursion_id INTEGER,
    CONSTRAINT pk_tour_link_excursion PRIMARY KEY (id)
);

ALTER TABLE business.flight
    ADD CONSTRAINT FK_FLIGHT_ON_PILOT FOREIGN KEY (pilot_id) REFERENCES business.pilot (id);

ALTER TABLE business.flight
    ADD CONSTRAINT FK_FLIGHT_ON_STATUS FOREIGN KEY (status_id) REFERENCES business.status (id);

ALTER TABLE business.review
    ADD CONSTRAINT FK_REVIEW_ON_CLIENT FOREIGN KEY (client_id) REFERENCES business.client (id);

ALTER TABLE business.review
    ADD CONSTRAINT FK_REVIEW_ON_TOUR FOREIGN KEY (tour_id) REFERENCES business.tour (id);

ALTER TABLE business.ticket
    ADD CONSTRAINT FK_TICKET_ON_CLIENT FOREIGN KEY (client_id) REFERENCES business.client (id);

ALTER TABLE business.ticket
    ADD CONSTRAINT FK_TICKET_ON_FLIGHT FOREIGN KEY (flight_id) REFERENCES business.flight (id);

ALTER TABLE business.tour_link_excursion
    ADD CONSTRAINT FK_TOUR_LINK_EXCURSION_ON_EXCURSION FOREIGN KEY (excursion_id) REFERENCES business.excursion (id);

ALTER TABLE business.tour_link_excursion
    ADD CONSTRAINT FK_TOUR_LINK_EXCURSION_ON_TOUR FOREIGN KEY (tour_id) REFERENCES business.tour (id);

ALTER TABLE business.tour
    ADD CONSTRAINT FK_TOUR_ON_AGENCY FOREIGN KEY (agency_id) REFERENCES business.agency (id);